Apply by doing:
	cd /usr/src/sys
	patch -p0 < 015_mpi.patch

Then build and install a new kernel.

Index: sys/dev/ic/mpi.c
===================================================================
RCS file: /cvs/src/sys/dev/ic/mpi.c,v
retrieving revision 1.109
retrieving revision 1.109.2.1
diff -u -p -r1.109 -r1.109.2.1
--- sys/dev/ic/mpi.c	16 Feb 2009 21:19:07 -0000	1.109
+++ sys/dev/ic/mpi.c	4 Apr 2010 11:37:23 -0000	1.109.2.1
@@ -1,4 +1,4 @@
-/*	$OpenBSD: mpi.c,v 1.109 2009/02/16 21:19:07 miod Exp $ */
+/*	$OpenBSD: mpi.c,v 1.109.2.1 2010/04/04 11:37:23 dlg Exp $ */
 
 /*
  * Copyright (c) 2005, 2006 David Gwynne <dlg@openbsd.org>
@@ -2609,7 +2609,7 @@ mpi_bio_get_pg0_raid(struct mpi_softc *s
 	/* replace current buffer with new one */
 	len = sizeof *rpg0 + sc->sc_vol_page->max_physdisks *
 	    sizeof(struct mpi_cfg_raid_vol_pg0_physdisk);
-	rpg0 = malloc(len, M_TEMP, M_WAITOK | M_CANFAIL);
+	rpg0 = malloc(len, M_DEVBUF, M_WAITOK | M_CANFAIL);
 	if (rpg0 == NULL) {
 		printf("%s: can't get memory for RAID page 0, "
 		    "bio disabled\n", DEVNAME(sc));

Apply by doing:
	cd /usr/src
	patch -p0 < 014_kerberos.patch

Rebuild and install the Kerberos 5 library:
	cd lib/libkrb5
	make obj
	make depend
	make
	make install

And then rebuild and install the Kerberos 5 KDC:
	cd ../../kerberosV/libexec/kdc
	make obj
	make depend
	make
	make install

Index: kerberosV/src/lib/krb5/crypto.c
===================================================================
RCS file: /cvs/src/kerberosV/src/lib/krb5/crypto.c,v
retrieving revision 1.10
diff -p -u -p -u -r1.10 crypto.c
--- kerberosV/src/lib/krb5/crypto.c	6 Oct 2006 07:09:10 -0000	1.10
+++ kerberosV/src/lib/krb5/crypto.c	30 Mar 2010 17:30:23 -0000
@@ -3451,6 +3451,12 @@ decrypt_internal_derived(krb5_context co
 	return KRB5_BAD_MSIZE;
     }
 
+    if (len < checksum_sz + et->confoundersize) {
+	krb5_set_error_string(context, "Encrypted data shorter then "
+				  "checksum + confunder");
+	return KRB5_BAD_MSIZE;
+    }
+
     p = malloc(len);
     if(len != 0 && p == NULL) {
 	krb5_set_error_string(context, "malloc: out of memory");
@@ -3525,6 +3531,13 @@ decrypt_internal(krb5_context context,
     }
 
     checksum_sz = CHECKSUMSIZE(et->checksum);
+
+    if (len < checksum_sz + et->confoundersize) {
+	krb5_set_error_string(context, "Encrypted data shorter then "
+				  "checksum + confunder");
+	return KRB5_BAD_MSIZE;
+    }
+
     p = malloc(len);
     if(len != 0 && p == NULL) {
 	krb5_set_error_string(context, "malloc: out of memory");
@@ -3587,6 +3600,12 @@ decrypt_internal_special(krb5_context co
 
     if ((len % et->padsize) != 0) {
 	krb5_clear_error_string(context);
+	return KRB5_BAD_MSIZE;
+    }
+
+    if (len < cksum_sz + et->confoundersize) {
+	krb5_set_error_string(context, "Encrypted data shorter then "
+				  "checksum + confunder");
 	return KRB5_BAD_MSIZE;
     }
 

Apply by doing:
	cd /usr/src
	patch -p0 < 013_ftpd.patch

And then rebuild and install ftpd:
	cd libexec/ftpd
	make depend
	make
	make install

Index: libexec/ftpd/popen.c
===================================================================
RCS file: /cvs/src/libexec/ftpd/popen.c,v
retrieving revision 1.22
diff -p -u -p -u -r1.22 popen.c
--- libexec/ftpd/popen.c	30 Jun 2008 12:03:51 -0000	1.22
+++ libexec/ftpd/popen.c	12 Mar 2010 12:42:45 -0000
@@ -113,12 +113,13 @@ ftpd_popen(char *program, char *type)
 					fatal ("Out of memory.");
 			}
 
-		} else
+		} else if (gl.gl_pathc > 0) {
 			for (pop = gl.gl_pathv; *pop && gargc < MAX_GARGV-1; pop++) {
 				gargv[gargc++] = strdup(*pop);
 				if (gargv[gargc - 1] == NULL)
 					fatal ("Out of memory.");
 			}
+		}
 		globfree(&gl);
 	}
 	gargv[gargc] = NULL;

